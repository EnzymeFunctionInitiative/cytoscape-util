Bootstrap: docker
From: ubuntu
Stage: build


%setup
    mkdir -p $SINGULARITY_ROOTFS/opt/cytoscape-util

%files
    /home/nils/cytoscape-singularity/cytoscape-util /opt

%post
    apt-get update
    apt-get install --no-install-recommends --yes python3 pip git libgd-perl locales language-pack-en
    export LANGUAGE=en_US.UTF-8 && export LANG=en_US.UTF-8 && export LC_ALL=en_US.UTF-8
    locale-gen en_US
    locale-gen en_US.UTF-8
    update-locale LC_ALL=en_US.UTF-8
    pip install uuid pandas networkx requests python-igraph colorbrewer chardet decorator
#    git clone --branch dev-local-py4cytoscape https://github.com/EnzymeFunctionInitiative/cytoscape-util.git /opt/cytoscape-util
    chmod +x /opt/cytoscape-util/misc/crop_ssn_image.pl

%runscript
    # Uses dash
    if [ "$1" = "quit" ]
    then
        python3 /opt/cytoscape-util/ssn2image/ssn2image.py --quit --port $2
    else
        args="--ssn $1 --image-base $2"
        if [ $# -gt 2 ]
        then
            args="$args --port $3"
        fi
        if [ $# -gt 3 ] && [ $4 -gt 0 ]
        then
            args="$args --verbose"
        fi
        if [ $# -gt 4 ]
        then
            args="$args --zoom $5"
        fi
        python3 /opt/cytoscape-util/ssn2image/ssn2image.py $args
        echo "$args"
    fi
    if [ $# -gt 5 ] && [ $# -gt 0 ]
    then
        echo "Cropping image"
        /opt/cytoscape-util/misc/crop_ssn_image.pl $2 $2.crop
        mv $2 $2.bak
        mv $2.crop $2
    else
        echo "Not cropping image"
    fi

%test
    # This doesn't currently work because py4cytoscape tries to create a 'log' dir.
    #TESTFILE=/tmp/test_cluster.png
    #python3 /opt/cytoscape-util/ssn2image/ssn2image.py --ssn /opt/test_ssn.xgmml --image-base $TESTFILE
    #if [ -f "$TESTFILE" ]; then
    #    exit 0
    #else
    #    exit 1
    #fi

